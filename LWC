#Use Static resource 
_________________________________________________________________________________________________________________________________________________
Upload the Static Resource
Go to Setup in Salesforce.
Search for Static Resources in the Quick Find box.
Click Static Resources.
Click New.
Fill in the required fields:
Name: Give your static resource a name (e.g., MyImageResource).
Cache Control: Choose Public or Private based on your requirements.
Upload File: Choose the file to upload (e.g., myImage.png).
Click Save.

# JS
import { LightningElement } from 'lwc';
import myImageResource from '@salesforce/resourceUrl/MyImageResource';

export default class MyComponent extends LightningElement {
    imageUrl = myImageResource;
}


#HTML
<template>
    <img src={imageUrl} alt="My Image" />
</template>



# Parent To Child
_______________________________________________________________________________________________________________________________

// ParentLWC.js
import { LightningElement } from 'lwc';

export default class ParentLWC extends LightningElement {
    showChild = false; // Controls if child component is displayed or not
    messageForChild = "Hello from Parent!"; // Message to send to child component

    // Method to toggle child visibility
    toggleChildVisibility() {
        this.showChild = !this.showChild; // Toggle the value
    }
}

//HTML
<template>
    <lightning-card title="Parent LWC">
        <!-- Button to toggle child component visibility -->
        <lightning-button label="Toggle Child Component" onclick={toggleChildVisibility}></lightning-button>

        <!-- Conditional rendering of child component based on 'showChild' -->
        <template if:true={showChild}>
            <c-child-lwc message-from-parent={messageForChild}></c-child-lwc>
        </template>

        <!-- Show when child is not visible -->
        <template if:false={showChild}>
            <p>Child component is hidden.</p>
        </template>
    </lightning-card>
</template>




//Child
// ChildLWC.js
import { LightningElement, api } from 'lwc';

export default class ChildLWC extends LightningElement {
    @api messageFromParent; // Public property to receive data from parent
}

//HTML
<template>
    <lightning-card title="Child LWC">
        <p>Message from Parent: {messageFromParent}</p>
    </lightning-card>
</template>
